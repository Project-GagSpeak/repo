# Updates the downloadcounts in the downloadcounts var in the json and updates the reflection to the latest commit as a squashed merge to avoid commit history spam.
name: Update Download Counts

on:
  schedule:
    - cron: '*/5 * * * *' # Runs at the start of every hour
  workflow_dispatch: # dispatches 

jobs:
  update-download-count:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Fetches all history for all branches and tags
      - name: Disable Strict Host Key Checking for the server
        run: |
          mkdir -p ~/.ssh
          echo "Host ${{ secrets.SSH_PRIVATE_IP }}" > ~/.ssh/config
          echo "    HostName ${{ secrets.SSH_PRIVATE_IP }}" >> ~/.ssh/config
          echo "    User root" >> ~/.ssh/config
          echo "    IdentityFile $(pwd)/ssh_key" >> ~/.ssh/config
          echo "    StrictHostKeyChecking no" >> ~/.ssh/config
        env:
          SSH_PRIVATE_IP: ${{ secrets.SSH_PRIVATE_IP }}
      
      - name: Install SSH key
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
      
      - name: Fetch download count from server
        id: fetch-count
        run: |
          # Replace with your server details
          SSH_HOST="${{ secrets.SSH_PRIVATE_IP }}"
          SSH_USER="root"
          TARGET_DIR="/var/www/files.kinkporium.studio/downloads"
          FILE_NAME="downloads.txt"
          
          # SSH into the server and fetch the download count
          DOWNLOAD_COUNT=$(ssh $SSH_USER@$SSH_HOST "cat $TARGET_DIR/$FILE_NAME")
          echo "Download count fetched: $DOWNLOAD_COUNT"
          echo "::set-output name=download_count::$DOWNLOAD_COUNT"
      
      - name: Update download counts in JSON
        run: |
          DOWNLOAD_COUNT=${{ steps.fetch-count.outputs.download_count }}
          JSON_FILE="projectgagspeak.json"
          
          # Use jq to update the download count in the JSON file
          jq --argjson count $DOWNLOAD_COUNT '.[0].DownloadCount = $count' $JSON_FILE > temp.json && mv temp.json $JSON_FILE
      
      - name: Amend or Create New Commit for Download Count Update
        run: |     
          # Fetch the latest commits and tags
          git fetch --all
          
          # Check the total number of commits in the history
          COMMIT_COUNT=$(git rev-list --count HEAD)
          echo "total commits $COMMIT_COUNT"
          
          # Add changes to staging
          git add projectgagspeak.json
          
          # Check if there are changes to commit
          if git diff --cached --quiet; then
            echo "No changes to commit."
          else
              # Create a new commit for the update
              git commit -m "Automated update of DownloadCount"
              # Step 1: Push your latest changes
              git push origin main
              echo "pushed to main"
              
              # Step 2: Check if the last two commit messages are the same and should be squashed
              LAST_COMMIT_MSG=$(git log -1 --pretty=%B)
              SECOND_LAST_COMMIT_MSG=$(git log -2 --pretty=%B | tail -n 1)
              echo "last two commits:"
              echo "Latest commit: $LAST_COMMIT_MSG"
              echo "2nd latest commit: $SECOND_LAST_COMMIT_MSG"
              
              if [[ "$LAST_COMMIT_MSG" == "$SECOND_LAST_COMMIT_MSG" ]]; then
                echo "They matched"
                # Step 3: Squash the last two commits
                git reset --soft HEAD~2 && 
                git commit --edit -m"$(git log --format=%B --reverse HEAD..HEAD@{1})"
                
                # Push the squashed commit
                echo "no match, pushing new"
                git push --force-with-lease origin main
              fi
          fi
        env:
          GIT_COMMITTER_NAME: "GitHub Action"
          GIT_AUTHOR_NAME: "GitHub Action"
          GIT_COMMITTER_EMAIL: "action@github.com"
          GIT_AUTHOR_EMAIL: "action@github.com"
